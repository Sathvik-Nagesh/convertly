{"version":3,"file":"static/js/353.5d652f68.chunk.js","mappings":"0LAGMA,EAAYC,GAHKA,IACZC,MAAMC,QAAQF,GAGjBG,CAAcH,GACPA,EAAO,GAEXA,ECgBX,EDdwCI,KAAiF,IAAhF,MAAEC,EAAK,KAAEC,EAAI,QAAEC,EAASC,MAAM,aAAEC,GAAyBC,KAAMC,GAAYP,EAA1BI,GAAII,EAAAA,EAAAA,GAAAR,EAA7BI,KAAIK,GACjE,MAAMH,EAAOC,GAAa,WAAJG,OAAeT,EAAK,eAC1C,GAAqB,QAAjBI,EACA,MAAO,CACHJ,QACAU,UAAW,SACXC,WAAY,CACRN,OACAJ,OACAC,WAEJC,MAAIS,EAAAA,EAAAA,GAAA,CACAR,gBACGD,GAEPU,WAAY,CAAC,EAAG,KAChBC,YAAa,CAAC,EAAG,MAwCzB,MAAO,CACHC,MAtCWC,IACX,MAAMC,EAAQD,EAAGE,OAAOD,MAExB,MAAME,UAAqBF,EAEvBG,WAAAA,GACIC,MAAM,CAAC,IAAGC,EAAAA,EAAAA,GAAA,oBACVC,KAAKC,KALA,EAMT,CACAC,IAAAA,CAAK9B,GACD,OAAOqB,EAAGU,IAAIhC,EAASC,GAAS4B,KAAKC,KACzC,GAEHF,EAAAA,EAAAA,GAVKH,EAAY,YASK,gBAkBvB,CACIA,EAjBqBQ,KACrB,MAAMC,UAAqBX,EAEvBG,WAAAA,GACIC,MAAM,CAAC,IAAGC,EAAAA,EAAAA,GAAA,aAFNK,EAGR,CACAE,kBAAAA,CAAmBC,GACf,MAAO,CAACA,EAAW,GAAIA,EAAW,GAAIA,EAAW,GAAI,EACzD,CACAL,IAAAA,CAAK9B,GACD,OAAOqB,EAAGe,aAAarC,EAASC,GAAS4B,KAAKvB,MAAO,OACzD,EAGJ,OADCsB,EAAAA,EAAAA,GAZKM,EAAY,2BAAAnB,OAWoBT,EAAK,MAEpC4B,GAIPI,CAAgBhC,IAClBiC,QAASC,IACPlB,EAAGmB,cAAcC,cAAcF,MAKnClC,QACAU,UAAW,SACXC,WAAY,CACRN,OACAJ,OACAC,WAEJC,MAAIS,EAAAA,EAAAA,GAAA,CACAR,gBACGD,GAEPU,WAAY,CAAC,EAAG,GAChBC,YAAa,CAAC,EAAG,KC5EDuB,CAAyB,CAC7CrC,MAFU,EAGVC,KCLgB,4BDMhBC,QCLmB,gBDMnBG,KAAM,oBACNF,KAAM,CACFmC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,GAAI,GACJC,EAAG,GACHtC,aAAc,MACduC,UAAW,IACXC,KAAM,OACNC,kBAAkB,EAClBC,YAAY,EACZC,QAAS,QACTC,cAAe,4G,gBEnBvB,SAASzC,EAAyB0C,EAAGC,GACnC,GAAI,MAAQD,EAAG,MAAO,CAAC,EACvB,IAAIE,EACFC,EACAC,ECLJ,SAAuCD,EAAGH,GACxC,GAAI,MAAQG,EAAG,MAAO,CAAC,EACvB,IAAIF,EAAI,CAAC,EACT,IAAK,IAAII,KAAKF,EAAG,GAAI,CAAC,EAAEG,eAAe9B,KAAK2B,EAAGE,GAAI,CACjD,IAAK,IAAML,EAAEO,QAAQF,GAAI,SACzBJ,EAAEI,GAAKF,EAAEE,EACX,CACA,OAAOJ,CACT,CDHQ,CAA6BD,EAAGC,GACtC,GAAIO,OAAOC,sBAAuB,CAChC,IAAIJ,EAAIG,OAAOC,sBAAsBT,GACrC,IAAKG,EAAI,EAAGA,EAAIE,EAAEK,OAAQP,IAAKD,EAAIG,EAAEF,IAAK,IAAMF,EAAEM,QAAQL,IAAM,CAAC,EAAES,qBAAqBnC,KAAKwB,EAAGE,KAAOE,EAAEF,GAAKF,EAAEE,GAClH,CACA,OAAOE,CACT,C","sources":["../node_modules/@upscalerjs/default-model/dist/esm/packages/shared/src/esrgan/esrgan.js","../node_modules/@upscalerjs/default-model/dist/esm/models/default-model/src/index.js","../node_modules/@upscalerjs/default-model/dist/esm/models/default-model/src/constants.generated.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["const isTensorArray = (inputs) => {\n    return Array.isArray(inputs);\n};\nconst getInput = (inputs) => {\n    if (isTensorArray(inputs)) {\n        return inputs[0];\n    }\n    return inputs;\n};\nexport const getESRGANModelDefinition = ({ scale, name, version, meta: { architecture, ...meta }, path: modelPath, }) => {\n    const path = modelPath || `models/x${scale}/model.json`;\n    if (architecture === 'rdn') {\n        return {\n            scale,\n            modelType: 'layers',\n            _internals: {\n                path,\n                name,\n                version,\n            },\n            meta: {\n                architecture,\n                ...meta,\n            },\n            inputRange: [0, 255,],\n            outputRange: [0, 255,],\n        };\n    }\n    const setup = (tf) => {\n        const Layer = tf.layers.Layer;\n        const BETA = 0.2;\n        class MultiplyBeta extends Layer {\n            beta;\n            constructor() {\n                super({});\n                this.beta = BETA;\n            }\n            call(inputs) {\n                return tf.mul(getInput(inputs), this.beta);\n            }\n            static className = 'MultiplyBeta';\n        }\n        const getPixelShuffle = (_scale) => {\n            class PixelShuffle extends Layer {\n                scale = _scale;\n                constructor() {\n                    super({});\n                }\n                computeOutputShape(inputShape) {\n                    return [inputShape[0], inputShape[1], inputShape[2], 3,];\n                }\n                call(inputs) {\n                    return tf.depthToSpace(getInput(inputs), this.scale, 'NHWC');\n                }\n                static className = `PixelShuffle${scale}x`;\n            }\n            return PixelShuffle;\n        };\n        [\n            MultiplyBeta,\n            getPixelShuffle(scale),\n        ].forEach((layer) => {\n            tf.serialization.registerClass(layer);\n        });\n    };\n    return {\n        setup,\n        scale,\n        modelType: 'layers',\n        _internals: {\n            path,\n            name,\n            version,\n        },\n        meta: {\n            architecture,\n            ...meta,\n        },\n        inputRange: [0, 1,],\n        outputRange: [0, 1,],\n    };\n};\n","import { getESRGANModelDefinition, } from '../../../packages/shared/src/esrgan/esrgan';\nimport { NAME, VERSION, } from './constants.generated';\nconst SCALE = 2;\nconst modelDefinition = getESRGANModelDefinition({\n    scale: SCALE,\n    name: NAME,\n    version: VERSION,\n    path: 'models/model.json',\n    meta: {\n        C: 1,\n        D: 2,\n        G: 4,\n        G0: 64,\n        T: 10,\n        architecture: \"rdn\",\n        patchSize: 128,\n        size: 'slim',\n        artifactReducing: false,\n        sharpening: false,\n        dataset: 'div2k',\n        modelFileName: 'rdn-C1-D2-G4-G064-T10-x2-patchsize128-compress100-sharpen0-datadiv2k-vary_cFalse_best-val_loss_epoch494',\n    },\n});\nexport default modelDefinition;\n","export const NAME = \"@upscalerjs/default-model\";\nexport const VERSION = \"1.0.0-beta.17\";\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };"],"names":["getInput","inputs","Array","isArray","isTensorArray","_ref","scale","name","version","meta","architecture","path","modelPath","_objectWithoutProperties","_excluded","concat","modelType","_internals","_objectSpread","inputRange","outputRange","setup","tf","Layer","layers","MultiplyBeta","constructor","super","_defineProperty","this","beta","call","mul","_scale","PixelShuffle","computeOutputShape","inputShape","depthToSpace","getPixelShuffle","forEach","layer","serialization","registerClass","getESRGANModelDefinition","C","D","G","G0","T","patchSize","size","artifactReducing","sharpening","dataset","modelFileName","e","t","o","r","i","n","hasOwnProperty","indexOf","Object","getOwnPropertySymbols","length","propertyIsEnumerable"],"sourceRoot":""}